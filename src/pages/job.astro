---
import Layout from '../layouts/Layout.astro';

// Importa tutti i file dalla cartella /jobs
interface Job {
  frontmatter: {
    title: string;
    company: string;
    date: string;
    description: string;
    tags?: string[];
  };
}

const jobs = (await Astro.glob<Job>('../pages/jobs/*.astro')).sort(
  (a, b) => new Date(b.frontmatter.date).getTime() - new Date(a.frontmatter.date).getTime()
);
---

<Layout title="Percorso lavorativo — Daniele Odorico">
  <section class="timeline max-w-7xl mx-auto my-20 relative">
    <h1 class="text-4xl sm:text-5xl font-bold leading-tight mb-10 text-[#f2f2f2] text-center">
      Percorso lavorativo
    </h1>

    <!-- Linea centrale animata -->
    <div class="timeline-line"></div>

    {jobs.map((job, index) => {
      const { title, company, date, description, tags = [] } = job.frontmatter;
      const alignRight = index % 2 === 0;
      return (
        <div class={`timeline-item ${alignRight ? 'right' : 'left'}`}>
          <article class="card fade-in">
            <h3 class="card-title">{title}</h3>
            <p class="text-[#00bcd4] font-mono text-sm mb-2">{company}</p>
            <p class="text-[#999] text-sm mb-4">
              {new Date(date).toLocaleDateString('it-IT', { month: 'long', year: 'numeric' })}
            </p>
            <p class="card-body">{description}</p>
            <div class="flex flex-wrap gap-2 mt-3">
              {tags.map((tag) => (
                <span class="tag-mini">{`#${tag}`}</span>
              ))}
            </div>
          </article>
        </div>
      );
    })}
  </section>

  <script>
    // Evidenzia progressivamente la linea verticale al passaggio dello scroll
    window.addEventListener('scroll', () => {
      const line = document.querySelector('.timeline-line');
      const scrollTop = window.scrollY;
      const docHeight = document.body.scrollHeight - window.innerHeight;
      const scrollPercent = scrollTop / docHeight;
      line.style.setProperty('--scroll', `${Math.min(scrollPercent * 100, 100)}%`);
    });

    // Effetto fade-in progressivo delle card
    const observer = new IntersectionObserver(
      (entries) => {
        entries.forEach((entry) => {
          if (entry.isIntersecting) entry.target.classList.add('visible');
        });
      },
      { threshold: 0.2 }
    );

    document.querySelectorAll('.fade-in').forEach((el) => observer.observe(el));
  </script>

  <style>
    .timeline {
      position: relative;
      padding-left: 1rem;
      padding-right: 1rem;
    }

    /* Linea centrale */
    .timeline-line {
      position: absolute;
      left: 50%;
      top: 0;
      bottom: 0;
      width: 2px;
      background: linear-gradient(
        to bottom,
        rgba(0, 188, 212, 0.25) 0%,
        rgba(0, 188, 212, 0.6) var(--scroll, 0%),
        rgba(0, 188, 212, 0.05) 100%
      );
      transform: translateX(-50%);
      border-radius: 2px;
      transition: background 0.2s ease-out;
      z-index: 0;
    }

    /* Elementi della timeline */
    .timeline-item {
      width: 80%;
      position: relative;
      margin-bottom: 4rem;
      z-index: 1;
    }

    .timeline-item.left {
      margin-left: 0;
      text-align: left;
    }

    .timeline-item.right {
      margin-left: auto;
      text-align: right;
    }

    /* Nodo sulla linea */
    .timeline-item::before {
      content: '';
      position: absolute;
      top: 1.5rem;
      width: 14px;
      height: 14px;
      border-radius: 50%;
      background: #00bcd4;
      border: 3px solid rgba(255, 255, 255, 0.2);
      z-index: 2;
    }

    .timeline-item.left::before {
      right: -39px;
    }

    .timeline-item.right::before {
      left: -39px;
    }

    /* Card */
    .card {
      background: rgba(0, 0, 0, 0.45);
      border: 1px solid rgba(255, 255, 255, 0.08);
      border-radius: 14px;
      padding: 1.5rem;
      box-shadow: 0 0 15px rgba(0, 188, 212, 0.12);
      transition:
        border-color 0.2s,
        transform 0.2s,
        opacity 0.6s ease;
      opacity: 0;
      transform: translateY(20px);
    }

    .card.visible {
      opacity: 1;
      transform: translateY(0);
    }

    .card:hover {
      border-color: rgba(0, 188, 212, 0.5);
      transform: translateY(-2px);
    }

    .card-title {
      color: #f2f2f2;
      font-weight: 700;
      margin-bottom: 0.35rem;
    }

    .card-body {
      color: #bfbfbf;
      line-height: 1.6;
    }

    .tag-mini {
      font-family: 'JetBrains Mono', ui-monospace, SFMono-Regular, Menlo, monospace;
      font-size: 0.8rem;
      color: #00bcd4;
      background: rgba(255, 255, 255, 0.04);
      padding: 0.15rem 0.35rem;
      border-radius: 0.35rem;
    }

    /* Responsività */
    @media (max-width: 768px) {
      .timeline-item {
        width: 100%;
        text-align: left !important;
      }
      .timeline-item::before {
        left: -30px !important;
        right: auto !important;
      }
      .timeline-line {
        left: 8px;
        transform: none;
      }
    }
  </style>
</Layout>
